<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.moredian.fishnet.device.mapper.DeviceMapper" >

    <resultMap id="deviceResultMap" type="device">
		<result column="orgi_equipment_id" property="deviceId" />
		<result column="org_id" property="orgId" />
		<result column="sub_org_id" property="positionId" />
		<result column="memo" property="position" />
		<result column="equipment_type" property="deviceType" />
		<result column="equipment_name" property="deviceName" />
		<result column="unique_number" property="deviceSn" />
		<result column="active_code" property="activeCode" />
		<result column="gmt_active_code" property="activeTime" />
		<result column="status" property="status" />
		<result column="extends_info" property="extendsInfo" />
		<result column="gmt_create" property="gmtCreate" />
		<result column="gmt_modify" property="gmtModify" />
	</resultMap>	
	
	<insert id="insert" parameterType="device">
		insert into hive_orgi_equipment(
			orgi_equipment_id,
			org_id,
			sub_org_id,
			memo,
			equipment_type,
			equipment_name,
			unique_number,
			active_code,
			gmt_active_code,
			extends_info,
			status,
			gmt_create,
			gmt_modify	
		) values (
		 	#{deviceId},
			#{orgId},
			#{positionId},
			#{position},
			#{deviceType},
			#{deviceName},
			#{deviceSn},
			#{activeCode},
			#{activeTime},
			#{extendsInfo},
			#{status},
			now(3),
			now(3)
		)
	</insert>
	
	<update id="update" parameterType="device">
		update hive_orgi_equipment
		<set>
		<if test="positionId != null">
			sub_org_id=#{positionId},
		</if>
		<if test="position != null">
			memo=#{position},
		</if>
		<if test="deviceName != null">
			equipment_name=#{deviceName},
		</if>
		<if test="activeCode != null">
			active_code=#{activeCode},
		</if>
		<if test="activeTime != null">
			gmt_active_code=#{activeTime},
		</if>
		<if test="extendsInfo != null">
			extends_info=#{extendsInfo},
		</if>
		<if test="status != null">
			status=#{status},
		</if>
			gmt_modify = now(3)
		</set>
		where
		    org_id=#{orgId}
			and orgi_equipment_id = #{deviceId}
	</update>
	
	<update id="updateActiveCode" parameterType="map">
		update hive_orgi_equipment
		<set>
			active_code=#{activeCode},
			gmt_modify = now(3)
		</set>
		where
		    org_id=#{orgId}
			and orgi_equipment_id = #{deviceId}
	</update>

	<update id="updateStatusBySn" parameterType="map">
		update hive_orgi_equipment
		set status = #{status}
		where
		org_id=#{orgId}
		and unique_number = #{deviceSn}
	</update>
	
	<select id="load" parameterType="map" resultMap="deviceResultMap">
		<include refid="sql_select"/>
		from hive_orgi_equipment
		where 
			orgi_equipment_id = #{deviceId}
			and org_id=#{orgId}
	</select>
	
	<select id="loadBySn" parameterType="map" resultMap="deviceResultMap">
		<include refid="sql_select"/>
		from hive_orgi_equipment
		where 
			unique_number = #{deviceSn}
			and org_id=#{orgId}
	</select>
	
	<select id="loadByActiveCode" parameterType="string" resultMap="deviceResultMap">
		<include refid="sql_select"/>
		from hive_orgi_equipment
		where 
			active_code = #{activeCode}
	</select>
	
	<select id="loadBySnOnly" parameterType="string" resultMap="deviceResultMap">
		<include refid="sql_select"/>
		from hive_orgi_equipment
		where 
			unique_number = #{deviceSn}
	</select>
	
	<delete id="deleteById" parameterType="map">
		delete from hive_orgi_equipment
		where
		org_id = #{orgId}
		and orgi_equipment_id = #{deviceId}
 	</delete>
 	
 	<delete id="deleteBySn" parameterType="map">
		delete from hive_orgi_equipment
		where
		org_id = #{orgId}
		and unique_number = #{deviceSn}
 	</delete>
 	
 	<update id="updateByActive" parameterType="map">
 	    update hive_orgi_equipment
 	    <set>
 	    unique_number = #{deviceSn},
 	    active_code = '0',
 	    version = #{version},
 	    status = #{status},
 	    gmt_active_code = now(3),
 	    gmt_modify = now(3)
 	    </set>
 	    where org_id = #{orgId}
 	    and orgi_equipment_id = #{deviceId}
 	</update>
 	
 	<select id="getTotalCountByCondition" resultType="int" parameterType="deviceQueryCondition" >
		select 
			count(*)		
		<include refid="condition_sql_where"/>
	</select>
	
	<select id="findPaginationByCondition" resultMap="deviceResultMap" parameterType="deviceQueryCondition" >
		<include refid="sql_select"/>			
		<include refid="condition_sql_where"/>
			order by gmt_create desc
		limit #{startRow}, #{pageSize}
	</select>
	
	<select id="findDeviceNameByIds" parameterType="map" resultType="string">
	    select equipment_name from hive_orgi_equipment where orgi_equipment_id in 
	    <foreach collection="deviceIdList" index="index" item="deviceId" open="(" separator="," close=")">#{deviceId}</foreach>
	</select>
	
	<select id="findDeviceByType" parameterType="map" resultMap="deviceResultMap">
	    <include refid="sql_select"/>
	    from hive_orgi_equipment where org_id = #{orgId} and equipment_type = #{deviceType}
	</select>
	
	<select id="findDeviceByTypes" parameterType="map" resultMap="deviceResultMap">
	    <include refid="sql_select"/>
	    from hive_orgi_equipment where org_id = #{orgId} and equipment_type in 
	    <foreach collection="deviceTypeList" index="index" item="deviceType" open="(" separator="," close=")">#{deviceType}</foreach>
	</select>
	
	<select id="findDeviceIdByType" parameterType="map" resultType="long">
	    <include refid="sql_select"/>
	    from hive_orgi_equipment where org_id = #{orgId} and equipment_type = #{deviceType}
	</select>
	
	<sql id="sql_select">
		select
			orgi_equipment_id,
			org_id,
			sub_org_id,
			memo,
			equipment_type,
			equipment_name,
			unique_number,
			active_code,
			gmt_active_code,
			status,
			extends_info,
			gmt_create,
			gmt_modify	
	</sql>

	<sql id="condition_sql_where">
	    from hive_orgi_equipment
	    <where>
		<if test="orgId != null">
		      and org_id = #{orgId}
		</if>
		<if test="deviceName != null">
		      and equipment_name like CONCAT('%',#{deviceName},'%')
		</if>
		<if test="positionId != null">
		      and sub_org_id = #{positionId}
		</if>
		<if test="deviceType != null">
		      and equipment_type = #{deviceType}
		</if>
		<if test="deviceSn != null">
		      and unique_number like CONCAT('%',#{deviceSn},'%')
		</if>
		<if test="keywords != null">
		      and (equipment_name like CONCAT('%',#{keywords},'%') or unique_number like CONCAT('%',#{keywords},'%'))
		</if>
		<if test="statusList != null">
		      and status in 
		      <foreach collection="statusList" index="index" item="status" open="(" separator="," close=")">#{status}</foreach>
		</if>
		<if test="deviceType == null and deviceTypeList != null">
			and equipment_type in
			<foreach collection="deviceTypeList" index="index" item="deviceType" open="(" separator="," close=")">#{deviceType}</foreach>
		</if>
		</where>
	</sql>
	
</mapper>